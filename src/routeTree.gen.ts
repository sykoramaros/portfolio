/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as LayoutIndexRouteImport } from './routes/_layout/index'
import { Route as LayoutPortfolioIndexRouteImport } from './routes/_layout/portfolio/index'
import { Route as LayoutPortfolioSkillsRouteImport } from './routes/_layout/portfolio/skills'
import { Route as LayoutPortfolioProjectsRouteImport } from './routes/_layout/portfolio/projects'
import { Route as LayoutPortfolioHobbiesRouteImport } from './routes/_layout/portfolio/hobbies'
import { Route as LayoutPortfolioContactRouteImport } from './routes/_layout/portfolio/contact'

const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutPortfolioIndexRoute = LayoutPortfolioIndexRouteImport.update({
  id: '/portfolio/',
  path: '/portfolio/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutPortfolioSkillsRoute = LayoutPortfolioSkillsRouteImport.update({
  id: '/portfolio/skills',
  path: '/portfolio/skills',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutPortfolioProjectsRoute = LayoutPortfolioProjectsRouteImport.update({
  id: '/portfolio/projects',
  path: '/portfolio/projects',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutPortfolioHobbiesRoute = LayoutPortfolioHobbiesRouteImport.update({
  id: '/portfolio/hobbies',
  path: '/portfolio/hobbies',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutPortfolioContactRoute = LayoutPortfolioContactRouteImport.update({
  id: '/portfolio/contact',
  path: '/portfolio/contact',
  getParentRoute: () => LayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof LayoutIndexRoute
  '/portfolio/contact': typeof LayoutPortfolioContactRoute
  '/portfolio/hobbies': typeof LayoutPortfolioHobbiesRoute
  '/portfolio/projects': typeof LayoutPortfolioProjectsRoute
  '/portfolio/skills': typeof LayoutPortfolioSkillsRoute
  '/portfolio': typeof LayoutPortfolioIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof LayoutIndexRoute
  '/portfolio/contact': typeof LayoutPortfolioContactRoute
  '/portfolio/hobbies': typeof LayoutPortfolioHobbiesRoute
  '/portfolio/projects': typeof LayoutPortfolioProjectsRoute
  '/portfolio/skills': typeof LayoutPortfolioSkillsRoute
  '/portfolio': typeof LayoutPortfolioIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/portfolio/contact': typeof LayoutPortfolioContactRoute
  '/_layout/portfolio/hobbies': typeof LayoutPortfolioHobbiesRoute
  '/_layout/portfolio/projects': typeof LayoutPortfolioProjectsRoute
  '/_layout/portfolio/skills': typeof LayoutPortfolioSkillsRoute
  '/_layout/portfolio/': typeof LayoutPortfolioIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/portfolio/contact'
    | '/portfolio/hobbies'
    | '/portfolio/projects'
    | '/portfolio/skills'
    | '/portfolio'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/portfolio/contact'
    | '/portfolio/hobbies'
    | '/portfolio/projects'
    | '/portfolio/skills'
    | '/portfolio'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/'
    | '/_layout/portfolio/contact'
    | '/_layout/portfolio/hobbies'
    | '/_layout/portfolio/projects'
    | '/_layout/portfolio/skills'
    | '/_layout/portfolio/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/portfolio/': {
      id: '/_layout/portfolio/'
      path: '/portfolio'
      fullPath: '/portfolio'
      preLoaderRoute: typeof LayoutPortfolioIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/portfolio/skills': {
      id: '/_layout/portfolio/skills'
      path: '/portfolio/skills'
      fullPath: '/portfolio/skills'
      preLoaderRoute: typeof LayoutPortfolioSkillsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/portfolio/projects': {
      id: '/_layout/portfolio/projects'
      path: '/portfolio/projects'
      fullPath: '/portfolio/projects'
      preLoaderRoute: typeof LayoutPortfolioProjectsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/portfolio/hobbies': {
      id: '/_layout/portfolio/hobbies'
      path: '/portfolio/hobbies'
      fullPath: '/portfolio/hobbies'
      preLoaderRoute: typeof LayoutPortfolioHobbiesRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/portfolio/contact': {
      id: '/_layout/portfolio/contact'
      path: '/portfolio/contact'
      fullPath: '/portfolio/contact'
      preLoaderRoute: typeof LayoutPortfolioContactRouteImport
      parentRoute: typeof LayoutRoute
    }
  }
}

interface LayoutRouteChildren {
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutPortfolioContactRoute: typeof LayoutPortfolioContactRoute
  LayoutPortfolioHobbiesRoute: typeof LayoutPortfolioHobbiesRoute
  LayoutPortfolioProjectsRoute: typeof LayoutPortfolioProjectsRoute
  LayoutPortfolioSkillsRoute: typeof LayoutPortfolioSkillsRoute
  LayoutPortfolioIndexRoute: typeof LayoutPortfolioIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutPortfolioContactRoute: LayoutPortfolioContactRoute,
  LayoutPortfolioHobbiesRoute: LayoutPortfolioHobbiesRoute,
  LayoutPortfolioProjectsRoute: LayoutPortfolioProjectsRoute,
  LayoutPortfolioSkillsRoute: LayoutPortfolioSkillsRoute,
  LayoutPortfolioIndexRoute: LayoutPortfolioIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
